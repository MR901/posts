name: "Build and Deploy"
on:
  push:
    branches:
      - develop
      # - main
      # - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "20"
      #     cache: "npm"

      # - name: Build static assets
      #   run: |
      #     yarn install
      #     yarn build

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4
          bundler-cache: true

      - name: Setup Python for RST support
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          pip install docutils pygments pyyaml

      - name: Generate attachment data
        run: |
          echo "ðŸ“Š Generating attachment data for GitHub Pages deployment..."
          mkdir -p _data
          python3 scripts/generate_attachment_data.py .
          echo "âœ… Attachment data generation completed"

      - name: Build site
        # run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        run: |
          bundle exec jekyll clean
          bundle exec jekyll b -d "_site"
        env:
          JEKYLL_ENV: "production"

      - name: Mirror site under baseurl for tests
        run: |
          BASE_PATH="${{ steps.pages.outputs.base_path }}"
          if [ -n "$BASE_PATH" ] && [ "$BASE_PATH" != "/" ]; then
            BASE_DIR="${BASE_PATH#/}"
            mkdir -p "_site$BASE_PATH"
            shopt -s dotglob
            for entry in _site/*; do
              name="$(basename "$entry")"
              if [ "$name" = "$BASE_DIR" ]; then
                continue
              fi
              cp -a "$entry" "_site$BASE_PATH/"
            done
            shopt -u dotglob
          fi

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            --disable-external \
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/,^\/posts\/posts\/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # path: "_site${{ steps.pages.outputs.base_path }}"
          path: "_site"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
