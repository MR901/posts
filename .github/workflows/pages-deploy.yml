name: "Build and Deploy"
on:
  push:
    branches:
      - develop
      - dev
      - main
      - master
      # Add any other branches you want to trigger deployment
      - article-*
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - .gitignore
      - README.md

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4
          bundler-cache: true

      - name: Setup Python for RST support
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          pip install docutils pygments pyyaml

      - name: Generate attachment data
        run: |
          echo "📊 Generating attachment data for GitHub Pages deployment..."
          echo "📂 Current directory: $(pwd)"
          echo "📁 Files in scripts/: $(ls -la scripts/ 2>/dev/null || echo 'scripts directory not found')"

          # Always regenerate data files on GitHub Pages to ensure they're current
          echo "📊 Regenerating data files for latest content..."
          mkdir -p _data
          python3 scripts/generate_attachment_data.py . || echo "⚠️ Data generation failed, using fallback"

          echo "📄 Final data files: $(ls -la _data/attachment_*.yml 2>/dev/null || echo 'no data files found')"

      - name: Build site
        run: |
          bundle exec jekyll clean
          bundle exec jekyll b -d "_site"
        env:
          JEKYLL_ENV: "production"

      - name: Mirror site under baseurl for tests
        run: |
          BASE_PATH="${{ steps.pages.outputs.base_path }}"
          if [ -n "$BASE_PATH" ] && [ "$BASE_PATH" != "/" ]; then
            BASE_DIR="${BASE_PATH#/}"
            mkdir -p "_site$BASE_PATH"
            shopt -s dotglob
            for entry in _site/*; do
              name="$(basename "$entry")"
              if [ "$name" = "$BASE_DIR" ]; then
                continue
              fi
              cp -a "$entry" "_site$BASE_PATH/"
            done
            shopt -u dotglob
          fi

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            --disable-external \
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/,^\/posts\/posts\/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

  deploy_preview:
    # Deploy preview for all PRs from the same repo; does not affect production
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy PR Preview to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true

  deploy:
    # Only deploy production Pages from allowed branches to satisfy environment protections
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/dev')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages (Production)
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: false
